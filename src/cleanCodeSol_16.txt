Пример 1.
Для разбора примера, времени связывания переменных, использую задачу «Мистер Робот и Корпорация Зла».
// https://github.com/patrakhin/theSurvivor/blob/main/src/cleanCodeSol_14.txt
Остановился на этом примере, т.к. считаю он очень хорошо отражает суть раздела.
Почему я так думаю:
Исходя из условий, нужна утилита, которая быстро выполняет требуемую задачу.
Т.е. сама программа должна быть создана для разового применения.
Здесь было бы уместным, применить раннее связывание (во время написания кода) и «магические числа» оставить в коде,
но опять же, кто даст гарантию, что условия не изменятся?
Поэтому «магические числа» вынесем в константы и переместим время связывания переменных на «чуть позже» -
во время компиляции кода. Код станет более гибче, сократиться время «внезапных» правок переменных.
Да, если сделать уклон в сторону гибкости – можно вынести сортировки массивов (стандартную – по возрастанию и заданный способ сортировки)
в отдельные методы и сдвинуть время связывания переменных еще позднее – во время выполнения программы.
Тогда возникает закономерный вопрос – как лучше?
Переносим время связывания переменных и делаем код гибче или связываем переменные во время написания кода?
Ответ - в условии задачи, программа должна работать быстро (укладываться в 1 секунду).
Соответственно – определяем константы и время связывания переменных установим во время компиляции кода.

Пример 2.
Для разбора примера, времени связывания переменных, использую задачу «Разблокировка мобильных телефонов».
//https://github.com/patrakhin/theSurvivor/blob/main/src/cleanCodeSol_15.txt

Этот пример может служить противоположностью примера 1.
Т.к. по условиям задачи, особой быстроты не требуется, необходимо разблокировать телефон.
Находим «магические числа» - определяем их в константы. Может изменится раскладка клавиатуры,
может расстояние по диагонали или цифра для пропуска – в любом случае, можно оперативно исправить код.
Расчеты значений по горизонтали/вертикали и диагонали – можно вынести в методы и методы будут считывать значения из файла,
сместить время связывания переменных – во время выполнения программы.
По условию задачи нет такой причины, по которой время связывания переменной необходимо выполнить как можно ранее.
Так же, исходя из предыдущих разделов – определение констант, та граница, за которую не стоит переходить и в части гибкости кода,
и в части сложности. Т.е. тот минимальный баланс, из которого нужно исходить.

Пример 3.
Для разбора примера, времени связывания переменных, использую задачу «Белые ходоки».
//https://github.com/patrakhin/theSurvivor/blob/main/src/cleanCodeSol_13.txt

В решении данной задачи, вынес «магические» числа и символы в константы –
сместил время связывания на время компиляции кода. Но, интовые переменные,
связал начальными значениями равными «0» во время написания кода, используя их сразу после объявления и инициализации.
В константы их вынести не могу – т.к. это аккумуляторы внутри цикла.
Тогда, получается, что минимально необходимая гибкость кода – обеспечивается константами,
а так же выносом в метод определения целого числа в строке (связывание выполнил во время выполнения программы).
В целом, от решения не требуется быстродействия и создание метода оправдано,
обеспечена и оперативность правки кода – при изменении условий
(символ обозначающий ходока также количество ходоков и сумма необходимая для определения ходоков.)
